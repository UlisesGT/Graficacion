using System;

namespace ConsoleApp1
{
    class Program
    {
        static void Main(string[] args)
        {
            int filas = 0, columnas = 0;
            int cont = 0, valor = 1;
            int f = 1, c = 1;

            ConsoleKeyInfo tecla;

            Console.WriteLine(Environment.NewLine);
            
            Console.Write("Tama√±o :  ");
            String tam = Console.ReadLine();
            String[] num = tam.Split(',');
            
            filas = Convert.ToInt32(num[0]);
            columnas = Convert.ToInt32(num[1]);
            
            
            char[,] matriz = new char[filas, columnas];
            
            do
            {
                Console.WriteLine(Environment.NewLine);
                Console.WriteLine("\n\n\t[" + columnas + " X " + filas + "]" + f +", "+ c);

                matriz[c, f] = 'X';

                Console.WriteLine("\t\t");
                Console.Write("\n\n");
                foreach (int i in matriz)
                {
                    if (i / 10 <= 0)
                    {
                        Console.Write(i + "   ");
                    }
                    else
                    {
                        Console.Write(i + "  ");
                    }
                    cont++;
                    if (cont == columnas)
                    {
                        Console.WriteLine();
                        cont = 0;
                    }
                }

                tecla = Console.ReadKey();
                
                Console.WriteLine(tecla.Key);

                switch (tecla.Key)
                {
                    case ConsoleKey.RightArrow:
                        f++;  
                        if (f == filas)
                        {
                            f = 0;
                        }
                        if (valor == 10)
                        {
                            valor = 0;
                        }
                        Console.WriteLine("\n\t" + c + ", " + f);
                        incremento();
                        break;
                    case ConsoleKey.LeftArrow:
                        f--;
                        if (f < 0)
                        {
                            f = filas - 1;
                        }
                        if (valor == 10)
                        {
                            valor = 0;
                        }
                        Console.WriteLine("\n\t" + c + ", " + f);
                        incremento();
                        break;
                    case ConsoleKey.UpArrow:
                        c--;
                        if (c < 0)
                        {
                            c = columnas - 1;
                        }
                        if (valor == 10)
                        {
                            valor = 0;
                        }
                        Console.WriteLine("\n\t" + c + ", " + f);
                        incremento();
                        break;
                    case ConsoleKey.DownArrow:
                        c++;
                        if (c == columnas)
                        {
                            c = 0;
                        }
                        if (valor == 10)
                        {
                            valor = 0;
                        }
                        Console.WriteLine("\n\t" + c + ", " + f);
                        incremento();
                        break;
                    default:
                        break;
                }
                Console.Clear();
            } while (true != ConsoleKeyInfo.Equals(tecla.Key, ConsoleKey.Escape));

            void incremento()
            {
                if (f == filas - 1 && c == 0)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f - 1] = Convert.ToChar(valor);
                    matriz[c + 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, filas - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, f - 1] = Convert.ToChar(valor);
                    matriz[0, 0] = Convert.ToChar(valor);
                    matriz[c + 1, 0] = Convert.ToChar(valor);
                    matriz[columnas - 1, 0] = Convert.ToChar(valor);
                } else if (f == 0 && c == 0)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f + 1] = Convert.ToChar(valor);
                    matriz[c + 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f + 1] = Convert.ToChar(valor);
                    matriz[c + 1, filas - 1] = Convert.ToChar(valor);
                    matriz[c, filas - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, 0] = Convert.ToChar(valor);
                    matriz[columnas - 1, f + 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, filas - 1] = Convert.ToChar(valor);
                } else if (f == 0 && c == columnas - 1)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f + 1] = Convert.ToChar(valor);
                    matriz[c - 1, f] = Convert.ToChar(valor);
                    matriz[c - 1, f + 1] = Convert.ToChar(valor);
                    matriz[0, 0] = Convert.ToChar(valor);
                    matriz[0, f + 1] = Convert.ToChar(valor);
                    matriz[0, filas - 1] = Convert.ToChar(valor);
                    matriz[c - 1, filas - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, filas - 1] = Convert.ToChar(valor);
                } else if (f == filas - 1 && c == columnas - 1)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f - 1] = Convert.ToChar(valor);
                    matriz[c - 1, f] = Convert.ToChar(valor);
                    matriz[c - 1, f - 1] = Convert.ToChar(valor);
                    matriz[0, filas - 1] = Convert.ToChar(valor);
                    matriz[0, f - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, 0] = Convert.ToChar(valor);
                    matriz[c - 1, 0] = Convert.ToChar(valor);
                    matriz[0, 0] = Convert.ToChar(valor);
                } else if (f == 0 && c != 0 && c != columnas - 1)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f + 1] = Convert.ToChar(valor);
                    matriz[c, filas - 1] = Convert.ToChar(valor);
                    matriz[c - 1, filas - 1] = Convert.ToChar(valor);
                    matriz[c - 1, f + 1] = Convert.ToChar(valor);
                    matriz[c - 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f + 1] = Convert.ToChar(valor);
                    matriz[c + 1, filas - 1] = Convert.ToChar(valor);
                } else if (f == filas - 1 && c != 0 && c != columnas - 1)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f - 1] = Convert.ToChar(valor);
                    matriz[c, 0] = Convert.ToChar(valor);
                    matriz[c - 1, f - 1] = Convert.ToChar(valor);
                    matriz[c - 1, 0] = Convert.ToChar(valor);
                    matriz[c - 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, 0] = Convert.ToChar(valor);
                    matriz[c + 1, f - 1] = Convert.ToChar(valor);
                } else if (c == 0 && f != 0 && f != filas - 1)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f + 1] = Convert.ToChar(valor);
                    matriz[c, f - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, f - 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, f + 1] = Convert.ToChar(valor);
                    matriz[columnas - 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f + 1] = Convert.ToChar(valor);
                    matriz[c + 1, f - 1] = Convert.ToChar(valor);
                } else if (c == columnas - 1 && f != 0 && f != filas - 1)
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f + 1] = Convert.ToChar(valor);
                    matriz[c, f - 1] = Convert.ToChar(valor);
                    matriz[c - 1, f - 1] = Convert.ToChar(valor);
                    matriz[c - 1, f + 1] = Convert.ToChar(valor);
                    matriz[c - 1, f] = Convert.ToChar(valor);
                    matriz[0, f] = Convert.ToChar(valor);
                    matriz[0, f + 1] = Convert.ToChar(valor);
                    matriz[0, f - 1] = Convert.ToChar(valor);
                } else
                {
                    matriz[c, f] = Convert.ToChar(valor);
                    matriz[c, f + 1] = Convert.ToChar(valor);
                    matriz[c, f - 1] = Convert.ToChar(valor);
                    matriz[c - 1, f - 1] = Convert.ToChar(valor);
                    matriz[c - 1, f + 1] = Convert.ToChar(valor);
                    matriz[c - 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f] = Convert.ToChar(valor);
                    matriz[c + 1, f + 1] = Convert.ToChar(valor);
                    matriz[c + 1, f - 1] = Convert.ToChar(valor);
                }
                    valor++;
            }
        }   
    }
}
